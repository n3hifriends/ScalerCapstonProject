spring.application.name=UserAuthenticationServices
spring.datasource.url=jdbc:mysql://localhost:3306/scaler_authentication_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
# Server Configuration
server.port=9000
# Logging Configuration
logging.level.org.springframework.security=trace
## Spring Security Configuration
#spring.security.user.name=user
#spring.security.user.password=password
#
## OAuth2 Client Configuration
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
#
## Require Authorization Consent
#spring.security.oauth2.authorizationserver.require-authorization-consent=true


eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
#spring.application.name=userservice
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
logging.level.org.springframework.cloud.netflix.eureka=DEBUG